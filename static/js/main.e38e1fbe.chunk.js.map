{"version":3,"sources":["Components/Tab.js","Components/Tablist.js","Components/Home.js","Components/About.js","Components/Resume.js","Components/Projects.js","Components/Body.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","className","style","this","onClick","changeTab","bind","title","Component","Tablist","tabs","map","Home","src","About","Resume","width","Projects","Body","displayContent","Footer","href","icon","faGithub","faLinkedin","App","state","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e38e1fbe.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Tab extends Component {\r\n    addStyling = () => {\r\n        if(this.props.tab.id == this.props.activeTab) {\r\n            return {backgroundColor: \"gray\"}\r\n        }\r\n        else{\r\n            return {backgroundColor: \"black\"}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='tab' style={this.addStyling()} \r\n                onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\r\n                <h5 className='tab_title'>{this.props.tab.title}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport Tab from './Tab'\r\n\r\nexport class Tablist extends Component {\r\n    render() {\r\n        return this.props.tabs.map((tab) => (\r\n            <Tab tab={tab} \r\n            activeTab={this.props.activeTab} \r\n            changeTab={this.props.changeTab}/>\r\n        ));\r\n    }\r\n}\r\nexport default Tablist;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"ucsb-image\">\r\n                    <img src=\"ucsb.jpg\"></img>\r\n                </div>\r\n                <div className=\"home-text\">\r\n                    <h2>Joon's Portfolio</h2>\r\n                    <p>Hi! Welcome to my portfolio website</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <div className=\"profile-image\">\r\n                    <img src=\"profile.png\"></img>\r\n                </div>\r\n                <div className=\"about-text\">\r\n                    <h2>About me</h2>\r\n                    <p>My name is Joon Lee, currently a 4th year at UCSB, studying computer science.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react'\r\n\r\nexport class Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"resume-grid\">\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\">\r\n                        <img src=\"nexa-logo.png\" width=\"200px\"></img>\r\n                    </div>\r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Developer</h3>\r\n                        <p>Developed user interface and server for its main product, 3D printers, using Python, QML, C++ Developed a feature that lets printers and computers to communicate through HTTP protocol Gained experience in working with a team and using task managing software, such as Confluence, Jira, Git, and BitBucket</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\"><img src=\"xponentialworks-logo.jpg\"></img></div>                \r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Development & QA Intern</h3>\r\n                        <p>Gained experience in user testing, continuous integration and deployment, and quality control Familiarized with using Google Cloud Platform, Docker, Kubernetes, and App Engine Developed features and tests for single-page application using Vue.js framework Wrote tests requiring use of GCP with Go Language.</p>\r\n                </div>  \r\n            </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume;","import React, { Component } from 'react'\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport ScrollUpButton from \"react-scroll-up-button\"\r\n\r\nexport class Projects extends Component {\r\n    render() {\r\n        return (\r\n            <SRLWrapper>\r\n            <div className=\"projects-grid\">\r\n                <div className=\"project-img\">\r\n                    <img src=\"navSB.png\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic1.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic2.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic3.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic4.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic5.jpg\"></img>\r\n                </div>\r\n            </div>\r\n            <ScrollUpButton />\r\n            </SRLWrapper>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\nexport default Projects;","import React, { Component } from 'react'\r\nimport Home from './Home'\r\nimport About from './About'\r\nimport Resume from './Resume'\r\nimport Projects from './Projects'\r\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\"\r\n\r\nexport class Body extends Component {\r\n    displayContent = () => {\r\n        var activeTab = this.props.activeTab\r\n        if(activeTab == 1)\r\n            return <Home/>\r\n        else if(activeTab == 2)\r\n            return <About/>\r\n        else if(activeTab == 3)\r\n            return <Resume/>\r\n        else\r\n            return (\r\n            <SimpleReactLightbox><Projects/></SimpleReactLightbox>\r\n            )\r\n    }\r\n    render() {\r\n        return (this.displayContent());        \r\n    }\r\n}\r\nexport default Body;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport 'w3-css/3/w3.css'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"w3-container w3-padding-64 w3-center w3-black w3-xlarge\">\r\n                    <a className=\"icons\" href=\"https://github.com/jlee122/portfolio\"><FontAwesomeIcon icon={faGithub}/></a>\r\n                    <a className=\"icons\" href=\"https://www.linkedin.com/in/joonlee122/\"><FontAwesomeIcon icon={faLinkedin}/></a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport Tablist from './Components/Tablist';\r\nimport Body from './Components/Body';\r\nimport Footer from './Components/Footer';\r\n\r\nexport class App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n    this.changeTab = (id) => {\r\n      this.setState({\r\n        activeTab: id\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const tabs = [\r\n    {\r\n      id: 1,\r\n      title: 'Home'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'About'\r\n    }, \r\n    {\r\n      id: 3,\r\n      title: 'Resume'\r\n    }, \r\n    {\r\n      id: 4,\r\n      title: 'Projects'\r\n    }   \r\n    ]\r\n    return (      \r\n      <div className = \"body\">\r\n        <div className=\"header\">\r\n          <h1>Welcome to Joon's Portfolio</h1>\r\n        </div>\r\n        <div className = \"nav-bar\">\r\n          <Tablist tabs={tabs} \r\n          activeTab={this.state.activeTab} \r\n          changeTab={this.changeTab}/>\r\n        </div>\r\n        <div className = \"main-body\">\r\n          <Body activeTab={this.state.activeTab}/>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}